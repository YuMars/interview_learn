红黑树
	红黑树是一种自平衡二叉查找树，被称为“对称二叉B树”。红黑树的结构复杂，但有良好的最坏情况运行时间，实践中高效：可以在O(log n)时间内完成查找、插入和删除。红黑树相对于AVL树来说，牺牲了部分平衡性以换取插入和删除操作时少量的旋转操作，整体来说性能要优于AVL树。

	红黑树是2-3-4树的一种等同。换句话说，对于每个2-3-4树，都存在至少一个数据元素是同样次序的红黑树。在2-3-4树上的插入和删除操作也等同于在红黑树中颜色翻转和旋转。这使得2-3-4树成为理解红黑树背后的逻辑的重要工具，这也是很多介绍算法的教科书在红黑树之前介绍2-3-4树的原因，尽管2-3-4树在实践中不经常使用。

性质：
	1：每个节点要么是黑色，要么是红色。
	2：根节点是黑色。
	3：每个叶子节点（NIL）是黑色。
	4：每个红色结点的两个子结点一定都是黑色。（或者说从每个叶子到根的所有路径上不能有两个连续的红色节点。）
	5：任意一结点到每个叶子结点的路径都包含数量相同的黑结点。
[图1]
	上面是一个具体的红黑树的图例。
	这些性质确保了红黑树的关键特征：从根到叶子的最长的可能路径不多余最短可能路径的两倍长。红黑树不是一个完美平衡二叉查找树，从图1中可以看到，6号子树比1号子子树高